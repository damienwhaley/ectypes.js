Drafts.js: an object & model generator with fake data. Define a set of Drafts for your model layer and have them populated with fake data.

draft [drɑːft] n 1. a plan, sketch, or drawing of something

DSL

this is the rough dsl I'm aiming for

//factory call to generate vanilla obj (no ORM) - Post
post = drafts.post();


//factory call to generate a model instance, created
comment = Comment.draft();
should.exist comment.id

//factory call to generate a model instance, unsaved
comment = Comment.sketch();
should.not.exist comment.id


//-----------
drafts = require("drafts")
drafts.defaultStrategy = //an ORM strategy (see below)

drafts.plan(
	{
		post: {
			topic: Faker.Lorem.words()
		}
	});

drafts.plan(
	{
		comment: {
			username: Faker.Name.findName(),
			text: Faker.Lorem.sentences()
		}
	});




Using an ORM 
------------
There are two tricks to wrapping Drafts DSL around your favourite ORM - ensuring that foo.draft({...}) calls the relevant foo.save({...}) function (the draft function should return a persisted object) and integrating ORM specific functionality (e.g. associations) into the draft.




List of ORMs, etc.: https://github.com/joyent/node/wiki/modules#wiki-database 

You can then set a default strategy in your Drafts.


Drafts.defaultStrategy = require('myStrategy')



Example Draft.NodeORM (node-orm) Strategy:

{
	save: Model.save()
}




create


1 - http://en.wikipedia.org/wiki/Strategy_pattern



Drafts uses a simple lifecycle 